name: GraphQL Inspector
author: Kamil Kisiela <kamil.kisiela@gmail.com>
description: 'Tooling for GraphQL. Compare schemas, find breaking changes, find similar types.'
branding:
  icon: search
  color: orange
inputs:
  name:
    description: |
      The name of the check ("GraphQL Inspector" by default).
      In case of multiple GraphQL Inspector Actions, use `name` to prevent GitHub from overwriting results.
      For example, "Check Public API" and "Check Internal API".
  annotations:
    description: Use annotation (enabled by default)
  create-action-check:
    description: |
      Create Github Action check with summary. When disabled, annotations are disabled too. (enabled by default)
      It can be useful to disable, when running on master branch or similar. And when subsequent step is using output and annotations nor check is required.
  fail-on-breaking:
    description: Fail on breaking changes (enabled by default)
  approve-label:
    description:
      'Label to mark Pull Request introducing breaking changes as safe and expected
      ("approved-breaking-change" by default)'
  schema:
    description: |
      Ref and Path to GraphQL Schema (e.g. "master:schema.graphql")

      * Ref is needed where 'endpoint' is not defined
      * Can be URL to the GraphQL API - should represent the "after" schema. Available only if 'endpoint' is defined. Has to start with http(s).
    required: true
  endpoint:
    description: |
      An url to the GraphQL API. It should represent the "before" schema.

      When using an endpoint, 'schema' should point to a file (without a reference - branch name for example)
  github-token:
    default: '${{ github.token }}'
    required: false
    description: 'Github Token. Use {{ github.token }} by default'
  experimental_merge:
    description: |
      Merge Pull Request's branch with the target branch to get the schema.
      Helps to get the correct state of schema when Pull Request is behind the target branch

      (enabled by default)
  rules:
    description: |
      Apply rules that change certain checks from Breaking to Dangerous.

      Rules should be listed as a multiline YAML string, not a list
    required: false
  onUsage:
    description: |
      Used only when the `considerUsage` rule is provided, otherwise this field is ignored.

      Should be a path to a JS file as described in https://the-guild.dev/graphql/inspector/docs/essentials/diff#considerusage
    required: false

outputs:
  changes:
    description: Total number of changes
  breaking-changes:
    description: List of breaking changes. Each item is message string.
  dangerous-changes:
    description: List of dangerous changes. Each item is message string.
  safe-changes:
    description: List of safe changes. Each item is message string.
runs:
  using: node20
  main: action/index.js
